'''
    2 1 0 1 0이 주어질 때,
    첫 번째인 1은 앞에 큰 수가 2개 주어진다.
    가장 작은 수 이므로 앞에 오는 모든 수가 큰 수가 되기에 index가 2가 된다.
    x x 1 x x
    두 번째인 2는 앞에 큰 수가 1개 주어진다.
    그러므로 index가 1이 된다.
    x 2 1 x x
    세 번째인 3는 앞에 큰 수가 0개 주어진다.
    3 2 1 x x
    네 번째인 4는 앞에 큰 수가 1개 주어진다.
    3 2 1 x 4
    다섯 번째인 5는 앞에 큰 수가 0개 주어진다.
    남은 위치는 3이다.
    정답: 3 2 1 5 4

    얼핏보면 작은 수 부터 시작하면서 해당 index가 비어있다면 할당, 아닌 경우 다음 빈자리로 할당하면 될 것 같지만
    위의 방식대로 배치하면 3 2 1 4 5가 된다.
    큰 수로 할당해보면 배열의 길이를 늘려가며 접근해야 함을 확인할 수 있다.
'''
N = int(input())
arr = list(map(int, input().split()))
result = []
# 마지막 값 부터 1씩 감소한다.
for i in range(N - 1, -1, -1):
    # i = 4일 때, index = 0이므로 빈 배열의 index 0에 5를 할당한다.
    # i = 3일 때, index = 1이므로 [5] 배열의 index 1에 4를 할당한다.
    # i = 2일 때, index = 0이므로 [5, 4] 배열의 index 0에 3을 할당한다.
    # i = 1일 때, index = 1이므로 [3, 5, 4] 배열의 index 1에 2를 할당한다.
    # i = 0일 때, index = 2이므로 [3, 2, 5, 4] 배열의 index 2에 1을 할당한다.
    result.insert(arr[i], i + 1)
print(*result)